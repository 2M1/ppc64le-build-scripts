#Install the required dependencies
yum clean all
yum repolist

yum -y install git vim make cmake python cups-devel pkgconfig nss-devel openssl-devel glib2-devel libgnome-keyring-devel  pango-devel dbus-devel atk-devel at-spi2-atk-devel gtk3-devel krb5-devel pulseaudio-libs-devel libXScrnSaver-devel epel-release subversion curl alsa-lib-devel pciutils-devel mesa-libGLw gperf bison patch bzip2 uuid-devel 

yum -y install cmake3 re2c clang ninja-build
yum -y install java-1.8.0-openjdk-devel libXtst-devel devtoolset-7-libatomic-devel

curl https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  
nvm install v8.9.4
ln -s /root/.nvm/versions/node/v8.9.4/bin/node /usr/bin/node

#Install GCC-7
rm -rf /etc/yum.repos.d/CentOS-SCLo-scl.repo /etc/yum.repos.d/CentOS-SCLo-scl.repo
yum install centos-release-scl
yum -y install devtoolset-7-gcc-c++
scl enable devtoolset-7 bash

#Install git 2.21.0
yum -y install curl-devel expat-devel gettext-devel zlib-devel
yum -y install perl-ExtUtils-MakeMaker wget

cd /usr/src
wget https://www.kernel.org/pub/software/scm/git/git-2.21.0.tar.gz
tar xzf git-2.21.0.tar.gz

cd git-2.21.0
make prefix=/usr/local/git all
make prefix=/usr/local/git install

echo "export PATH=/usr/local/git/bin:$PATH" >> /etc/bashrc
source /etc/bashrc
cd ~
mkdir chromium_build
export CHROMIUM_DIR=/root/chromium_build
cd $CHROMIUM_DIR

git clone https://gn.googlesource.com/gn
export CC=gcc
export CXX=g++
export AR=ar

cd gn/
git checkout 21564a96c1603ff2166c4eebb8b9b38988b412af

python build/gen.py --no-sysroot
ninja-build -C out
		
unset CXX
unset CC
unset AR 

cd $CHROMIUM_DIR
git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git

echo 'export PATH="$PATH:${CHROMIUM_DIR}/gn/out"' >> env.sh
echo 'export PATH="$PATH:${CHROMIUM_DIR}/depot_tools"' >> env.sh
echo 'export VPYTHON_BYPASS="manually managed python not supported by chrome operations"' >> env.sh
source env.sh

cd $CHROMIUM_DIR
export CLANG_REVISION=361212 # check CLANG_REVISION here https://chromium.googlesource.com/chromium/src.git/+/refs/heads/master/tools/clang/scripts/update.py

svn checkout --force https://llvm.org/svn/llvm-project/llvm/trunk@$CLANG_REVISION llvm
svn checkout --force https://llvm.org/svn/llvm-project/cfe/trunk@$CLANG_REVISION llvm/tools/clang
svn checkout --force https://llvm.org/svn/llvm-project/compiler-rt/trunk@$CLANG_REVISION llvm/compiler-rt 

mkdir llvm_build && cd llvm_build
cmake3 -DCMAKE_BUILD_TYPE=Release -DLLVM_TARGETS_TO_BUILD="PowerPC" -G "Unix Makefiles" ../llvm
make -j8

cd $CHROMIUM_DIR
mkdir chromium && cd chromium
fetch --no-history --nohooks chromium 

curl "https://wiki.raptorcs.com/w/images/1/10/Binutils-download.py-PPC.patch" | patch -p1 src/third_party/binutils/download.py
sed -i 's/\"custom_vars\"\: {},/\"custom_vars\"\: { \"checkout_nacl\"\: False },/g' .gclient

rm -rf src/buildtools/linux64/gn
cp -f $CHROMIUM_DIR/gn/out/gn src/buildtools/linux64/gn

gclient sync

cd $CHROMIUM_DIR
git clone https://github.com/shawnanastasio/chromium_power
cd chromium_power
python3 cpf.py $CHROMIUM_DIR/chromium/src 

#Note: Skipped all failed patched as they are either already applied or not needed, however apply the "crashpad/0001-Implement-support-for-PPC64-on-Linux.patch" manually if it fails.

cd $CHROMIUM_DIR/llvm_build/
make install 
cd -

./chromium/scripts/build_ffmpeg.py linux ppc64
./chromium/scripts/generate_gn.py
./chromium/scripts/copy_config.sh


cd $CHROMIUM_DIR/chromium/src/third_party/libvpx
mkdir source/config/linux/ppc64
./generate_gni.sh 
#make sure gn path is correct (source env.sh)
cd ../../ 

cd $CHROMIUM_DIR
cp -f gn/out/gn chromium/src/buildtools/linux64/gn

cd $CHROMIUM_DIR/chromium/src

curl "https://wiki.raptorcs.com/w/images/b/bb/0001-sandbox-linux-seccomp-bpf-helpers-Fix-TCGETS-declara.patch" | patch -p1

gn args out/Default 

#A text editor will open. Paste in the following configuration
---------------------------------------------------------
# Release mode
is_component_build = false
is_debug = false

# Disable broken features
enable_nacl = false
treat_warnings_as_errors = false
enable_dav1d_decoder = false

# For clang, add the following lines:
is_clang = true
clang_base_path = "/root/chromium_build/llvm_build"
clang_use_chrome_plugins = false
use_lld = false 
---------------------------------------------------------

#Build Chromium
ninja-build -C out/Default chrome

# To verify chrome binary
cd out/Default/
./chrome --version

